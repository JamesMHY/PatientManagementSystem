/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package patient.management.system;

import patient.management.system.function.AccountRequest;
import patient.management.system.function.JTextFieldCharLimit;
import patient.management.system.function.LoginContext;
import patient.management.system.function.DoctorLogin;
import patient.management.system.function.AdministratorLogin;
import patient.management.system.function.Login;
import patient.management.system.function.Account;
import patient.management.system.function.NewAccountFactory;
import patient.management.system.function.NewAccount;
import patient.management.system.function.PatientLogin;
import patient.management.system.function.SecretaryLogin;
import java.awt.*;
import java.io.*;
import java.security.NoSuchAlgorithmException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.border.LineBorder;
import patient.management.system.function.LoginController;

/**
 *
 * @author James Man https://www.geeksforgeeks.org/sha-256-hash-in-java/ 256
 * hash
 * https://stackoverflow.com/questions/43292673/java-how-to-check-if-a-string-contains-a-digit
 * check number
 * https://www.youtube.com/watch?v=IznTKbLoWG0&ab_channel=TeachIslamLondon
 * textfield char limit
 * https://stackoverflow.com/questions/40336374/how-do-i-check-if-a-java-string-contains-at-least-one-capital-letter-lowercase
 * upper lower and number
 */
public class LoginScreen extends javax.swing.JFrame {

    private String username;
    private char[] pass;
    private String password;
    private char[] retype_pass;
    private String retype_password;

    /**
     * Creates new form LoginScreen
     */
    public LoginScreen() throws IOException {
        initComponents();

        this.getContentPane().setBackground(Color.WHITE);
        this.getRootPane().setDefaultButton(Login_button);
        this.UserId_wrong_label.setVisible(false);
        this.Password_wrong_label.setVisible(false);
        this.Invalid_password_label.setVisible(false);
        this.User_id_text.setDocument(new JTextFieldCharLimit(16));
        this.Password_text.setDocument(new JTextFieldCharLimit(14));
        this.Password_retype_text.setDocument(new JTextFieldCharLimit(14));
        this.Age_text.setDocument(new JTextFieldCharLimit(2));
        this.Reminder_label.setText("<html><body>6-14 characters, <br>including uppercase <br>and lowercase letters<br> and numbers</body></html>");
        this.setLocationRelativeTo(null);

        Image icon = Toolkit.getDefaultToolkit().getImage("src/icon/icons8_hospital_3_30px.png");
        this.setIconImage(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        Login_panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Login_password_text = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Login_userid_text = new javax.swing.JTextField();
        Login_button = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        SignUp_button = new javax.swing.JButton();
        UserId_wrong_label = new javax.swing.JLabel();
        Password_wrong_label = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        Register_panel = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        User_id_text = new javax.swing.JTextField();
        Password_text = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        Password_retype_text = new javax.swing.JPasswordField();
        GivenName_text = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Back_button = new javax.swing.JButton();
        Surname_text = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        Sex_combobox = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Address_text = new javax.swing.JTextArea();
        Cancel_button = new javax.swing.JButton();
        Register_button = new javax.swing.JButton();
        Invalid_age_label = new javax.swing.JLabel();
        Age_text = new javax.swing.JTextField();
        Invalid_name_label = new javax.swing.JLabel();
        Reminder_label = new javax.swing.JLabel();
        Invalid_password_label = new javax.swing.JLabel();

        jLabel6.setText("jLabel6");

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(211, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Patient Management System");
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(java.awt.Color.white);
        setLocation(new java.awt.Point(100, 100));
        setMinimumSize(new java.awt.Dimension(1500, 900));
        setPreferredSize(new java.awt.Dimension(1500, 900));
        setResizable(false);
        getContentPane().setLayout(new java.awt.CardLayout());

        Login_panel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 80)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Patient Management System");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_hospital_3_120px_1.png"))); // NOI18N

        Login_password_text.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        Login_password_text.setToolTipText("Password");
        Login_password_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Login_password_text.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Login_password_text.setMaximumSize(new java.awt.Dimension(300, 37));
        Login_password_text.setMinimumSize(new java.awt.Dimension(300, 37));
        Login_password_text.setName("password_text"); // NOI18N
        Login_password_text.setPreferredSize(new java.awt.Dimension(300, 37));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_password_26px.png"))); // NOI18N
        jLabel3.setText("Password");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_user_24px.png"))); // NOI18N
        jLabel2.setText("User ID");

        Login_userid_text.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        Login_userid_text.setToolTipText("User ID");
        Login_userid_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Login_userid_text.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Login_userid_text.setMaximumSize(new java.awt.Dimension(300, 37));
        Login_userid_text.setMinimumSize(new java.awt.Dimension(300, 37));
        Login_userid_text.setName("userid_text"); // NOI18N
        Login_userid_text.setPreferredSize(new java.awt.Dimension(300, 37));

        Login_button.setBackground(new java.awt.Color(102, 102, 255));
        Login_button.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        Login_button.setForeground(new java.awt.Color(255, 255, 255));
        Login_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_workspace_40px_1.png"))); // NOI18N
        Login_button.setText("Login");
        Login_button.setToolTipText("Login");
        Login_button.setBorder(null);
        Login_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Login_button.setFocusable(false);
        Login_button.setHideActionText(true);
        Login_button.setName(""); // NOI18N
        Login_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Login_buttonActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Don't hava an Account?");

        SignUp_button.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        SignUp_button.setForeground(new java.awt.Color(102, 102, 255));
        SignUp_button.setText("Sign Up");
        SignUp_button.setBorder(null);
        SignUp_button.setBorderPainted(false);
        SignUp_button.setContentAreaFilled(false);
        SignUp_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SignUp_button.setFocusable(false);
        SignUp_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SignUp_buttonActionPerformed(evt);
            }
        });

        UserId_wrong_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_close_window_48px_1.png"))); // NOI18N
        UserId_wrong_label.setLabelFor(Login_userid_text);

        Password_wrong_label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_close_window_48px_1.png"))); // NOI18N
        Password_wrong_label.setLabelFor(Login_password_text);

        label1.setText("label1");
        label1.setVisible(false);

        javax.swing.GroupLayout Login_panelLayout = new javax.swing.GroupLayout(Login_panel);
        Login_panel.setLayout(Login_panelLayout);
        Login_panelLayout.setHorizontalGroup(
            Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Login_panelLayout.createSequentialGroup()
                .addGap(311, 311, 311)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Login_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 2364, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Login_panelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Login_panelLayout.createSequentialGroup()
                        .addGroup(Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, Login_panelLayout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(Login_userid_text, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(UserId_wrong_label))
                            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, Login_panelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Login_password_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(Password_wrong_label)))
                        .addGap(470, 470, 470))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Login_panelLayout.createSequentialGroup()
                        .addGroup(Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Login_button, javax.swing.GroupLayout.Alignment.CENTER, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.CENTER, Login_panelLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(45, 45, 45)
                                .addComponent(SignUp_button, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(522, 522, 522))))
            .addGroup(Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Login_panelLayout.createSequentialGroup()
                    .addGap(123, 123, 123)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(2261, Short.MAX_VALUE)))
        );
        Login_panelLayout.setVerticalGroup(
            Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Login_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addGroup(Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Login_userid_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserId_wrong_label, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Login_password_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Password_wrong_label, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(Login_button, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SignUp_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(115, 115, 115))
            .addGroup(Login_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(Login_panelLayout.createSequentialGroup()
                    .addGap(863, 863, 863)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        Login_userid_text.getAccessibleContext().setAccessibleName("");

        getContentPane().add(Login_panel, "card2");

        Register_panel.setBackground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("User ID");

        jLabel8.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Password");

        User_id_text.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        User_id_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        Password_text.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        Password_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Password_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Password_textKeyReleased(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Retype Password");

        Password_retype_text.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        Password_retype_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Password_retype_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Password_retype_textKeyReleased(evt);
            }
        });

        GivenName_text.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        GivenName_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        GivenName_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                GivenName_textKeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        jLabel11.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Given Name");

        jLabel12.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Register");

        jLabel13.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("Surname");

        Back_button.setBackground(new java.awt.Color(102, 102, 255));
        Back_button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/icons8_back_40px.png"))); // NOI18N
        Back_button.setBorderPainted(false);
        Back_button.setContentAreaFilled(false);
        Back_button.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Back_button.setFocusPainted(false);
        Back_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Back_buttonActionPerformed(evt);
            }
        });

        Surname_text.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Surname_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Surname_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Surname_textKeyReleased(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("Sex");

        jLabel15.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("Age");

        Sex_combobox.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Sex_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "M", "F" }));
        Sex_combobox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Sex_combobox.setFocusable(false);

        jLabel16.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Address");
        jLabel16.setToolTipText("");

        Address_text.setColumns(20);
        Address_text.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        Address_text.setRows(5);
        Address_text.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setViewportView(Address_text);

        Cancel_button.setBackground(new java.awt.Color(255, 102, 102));
        Cancel_button.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Cancel_button.setForeground(new java.awt.Color(255, 255, 255));
        Cancel_button.setText("Cancel");
        Cancel_button.setBorder(null);
        Cancel_button.setBorderPainted(false);
        Cancel_button.setFocusPainted(false);
        Cancel_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cancel_buttonActionPerformed(evt);
            }
        });

        Register_button.setBackground(new java.awt.Color(102, 102, 255));
        Register_button.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Register_button.setForeground(new java.awt.Color(255, 255, 255));
        Register_button.setText("Register");
        Register_button.setToolTipText("");
        Register_button.setBorder(null);
        Register_button.setBorderPainted(false);
        Register_button.setFocusPainted(false);
        Register_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Register_buttonActionPerformed(evt);
            }
        });

        Invalid_age_label.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Invalid_age_label.setForeground(new java.awt.Color(255, 0, 0));
        Invalid_age_label.setToolTipText("");

        Age_text.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Age_text.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Age_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Age_textKeyReleased(evt);
            }
        });

        Invalid_name_label.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        Invalid_name_label.setForeground(new java.awt.Color(255, 0, 0));
        Invalid_name_label.setToolTipText("");

        Reminder_label.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Reminder_label.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        Invalid_password_label.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        Invalid_password_label.setForeground(new java.awt.Color(255, 0, 0));
        Invalid_password_label.setText("Must match the password\n");

        javax.swing.GroupLayout Register_panelLayout = new javax.swing.GroupLayout(Register_panel);
        Register_panel.setLayout(Register_panelLayout);
        Register_panelLayout.setHorizontalGroup(
            Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Register_panelLayout.createSequentialGroup()
                .addGap(430, 430, 430)
                .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel9)
                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Register_panelLayout.createSequentialGroup()
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Password_text, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Password_retype_text, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Register_panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Reminder_label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Register_panelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Invalid_password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26))))
                    .addComponent(User_id_text, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Register_panelLayout.createSequentialGroup()
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Sex_combobox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Age_text, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(Invalid_age_label, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Register_panelLayout.createSequentialGroup()
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(GivenName_text, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Surname_text, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(Invalid_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                .addGap(987, 987, 987))
            .addGroup(Register_panelLayout.createSequentialGroup()
                .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Register_panelLayout.createSequentialGroup()
                        .addGap(572, 572, 572)
                        .addComponent(Cancel_button, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(111, 111, 111)
                        .addComponent(Register_button, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(Register_panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(454, 454, 454)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        Register_panelLayout.setVerticalGroup(
            Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Register_panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Back_button, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(Register_panelLayout.createSequentialGroup()
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(User_id_text, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                            .addComponent(Password_text))
                        .addGap(18, 18, 18)
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Password_retype_text, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Register_panelLayout.createSequentialGroup()
                        .addComponent(Reminder_label, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Invalid_password_label, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(Register_panelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(GivenName_text)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Surname_text, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Sex_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Register_panelLayout.createSequentialGroup()
                                .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Age_text, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(Invalid_age_label, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(Register_panelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(Invalid_name_label, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)))
                .addGap(46, 46, 46)
                .addGroup(Register_panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Register_button, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Cancel_button, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(251, Short.MAX_VALUE))
        );

        getContentPane().add(Register_panel, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Login_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Login_buttonActionPerformed
        //try {
        // TODO add your handling code here:
        username = Login_userid_text.getText();
        pass = Login_password_text.getPassword();
        password = new String(pass);

        try {
            Login model = new Login();
            LoginScreen view = new LoginScreen();
            LoginController loginController = new LoginController(model, view);
            loginController.setUserID(username);
            loginController.setPassword(password);
            loginController.checkingLogin();

            if (loginController.getUsername_checking() == true) {
                if (loginController.getPassword_checking() == true) {
                    if (loginController.getRoleApproval().equals("A")) {
                        this.Login_password_text.setBorder(new LineBorder(Color.black, 1));
                        this.Password_wrong_label.setVisible(false);

                        LoginContext context = new LoginContext(new DoctorLogin());
                        System.out.println("Doctor login status: " + context.executeStrategy(loginController.getRoleLetter()));
                        if (context.executeStrategy(loginController.getRoleLetter())) {
                            new MainScreen_Doctor().setName(loginController.getRoleName());
                            new MainScreen_Doctor().setUser_id(loginController.getRoleUserid());
                            new MainScreen_Doctor().setVisible(true);
                        }
                        context = new LoginContext(new PatientLogin());
                        System.out.println("Patient login status: " + context.executeStrategy(loginController.getRoleLetter()));
                        if (context.executeStrategy(loginController.getRoleLetter())) {
                            new MainScreen().setName(loginController.getRoleName());
                            new MainScreen().setUser_id(loginController.getRoleUserid());
                            new MainScreen().setVisible(true);
                        }
                        context = new LoginContext(new AdministratorLogin());
                        System.out.println("Administrator login status: " + context.executeStrategy(loginController.getRoleLetter()));
                        if (context.executeStrategy(loginController.getRoleLetter())) {
                            new MainScreen_Administrator().setName(loginController.getRoleName());
                            new MainScreen_Administrator().setUser_id(loginController.getRoleUserid());
                            new MainScreen_Administrator().setVisible(true);
                        }
                        context = new LoginContext(new SecretaryLogin());
                        System.out.println("Secretary login status: " + context.executeStrategy(loginController.getRoleLetter()));
                        if (context.executeStrategy(loginController.getRoleLetter())) {
                            new MainScreen_Secretary().setName(loginController.getRoleName());
                            new MainScreen_Secretary().setUser_id(loginController.getRoleUserid());
                            new MainScreen_Secretary().setVisible(true);
                        }

                        this.setVisible(false);
                    } else if (loginController.getRoleApproval().equals("N")) {
                        JOptionPane.showMessageDialog(null, "Your application has not been approved!", "WARNING!", JOptionPane.WARNING_MESSAGE);
                    } else if (loginController.getRoleApproval().equals("W")) {
                        JOptionPane.showMessageDialog(null, "Your account has been waiting for termination!", "WARNING!", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    this.Login_password_text.setBorder(new LineBorder(Color.red, 2));
                    this.Password_wrong_label.setVisible(true);
                }
                this.Login_userid_text.setBorder(new LineBorder(Color.black, 1));
                this.UserId_wrong_label.setVisible(false);
            } else {
                this.Login_userid_text.setBorder(new LineBorder(Color.red, 2));
                this.UserId_wrong_label.setVisible(true);
            }
        } catch (IOException | NoSuchAlgorithmException ex) {
            Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
        }

        /*Login account = new Login(username, password);

            if (account.getUsername_checking() == true) {
                if (account.getPassword_checking() == true) {
                    if (account.getApproval().equals("A")) {
                        this.Login_password_text.setBorder(new LineBorder(Color.black,1));
                        this.Password_wrong_label.setVisible(false);
                        
                        LoginContext context = new LoginContext(new DoctorLogin());
                        System.out.println("Doctor login status: " + context.executeStrategy(account.getLetter()));
                        if (context.executeStrategy(account.getLetter())) {
                            new MainScreen_Doctor().setName(account.getName());
                            new MainScreen_Doctor().setUser_id(account.getUser_id());
                            new MainScreen_Doctor().setVisible(true);
                        }
                        context = new LoginContext(new PatientLogin());
                        System.out.println("Patient login status: " + context.executeStrategy(account.getLetter()));
                        if (context.executeStrategy(account.getLetter())) {
                            new MainScreen().setName(account.getName());
                            new MainScreen().setUser_id(account.getUser_id());
                            new MainScreen().setVisible(true);
                        }
                        context = new LoginContext(new AdministratorLogin());
                        System.out.println("Administrator login status: " + context.executeStrategy(account.getLetter()));
                        if (context.executeStrategy(account.getLetter())) {
                            new MainScreen_Administrator().setName(account.getName());
                            new MainScreen_Administrator().setUser_id(account.getUser_id());
                            new MainScreen_Administrator().setVisible(true);
                        }
                        context = new LoginContext(new SecretaryLogin());
                        System.out.println("Secretary login status: " + context.executeStrategy(account.getLetter()));
                        if (context.executeStrategy(account.getLetter())) {
                            new MainScreen_Secretary().setName(account.getName());
                            new MainScreen_Secretary().setUser_id(account.getUser_id());
                            new MainScreen_Secretary().setVisible(true);
                        }

                        this.setVisible(false);
                    } else if (account.getApproval().equals("N")) {
                        JOptionPane.showMessageDialog(null, "Your application has not been approved!", "WARNING!", JOptionPane.WARNING_MESSAGE);
                    } else if (account.getApproval().equals("W")) {
                        JOptionPane.showMessageDialog(null, "Your account has been waiting for termination!", "WARNING!", JOptionPane.WARNING_MESSAGE);
                    }
                } else {
                    this.Login_password_text.setBorder(new LineBorder(Color.red,2));
                    this.Password_wrong_label.setVisible(true);
                }
                this.Login_userid_text.setBorder(new LineBorder(Color.black,1));
                this.UserId_wrong_label.setVisible(false);
            } else {
                this.Login_userid_text.setBorder(new LineBorder(Color.red,2));
                this.UserId_wrong_label.setVisible(true);
            }
        } catch (IOException ex) {
            Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_Login_buttonActionPerformed

    private void SignUp_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SignUp_buttonActionPerformed
        // TODO add your handling code here:
        Login_panel.setVisible(false);
        Register_panel.setVisible(true);
        this.Login_userid_text.setBorder(new LineBorder(Color.black, 1));
        this.UserId_wrong_label.setVisible(false);
        this.Login_userid_text.setText("");
        this.Login_password_text.setBorder(new LineBorder(Color.black, 1));
        this.Password_wrong_label.setVisible(false);
        this.Login_password_text.setText("");
    }//GEN-LAST:event_SignUp_buttonActionPerformed

    private void Back_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Back_buttonActionPerformed
        // TODO add your handling code here:
        Login_panel.setVisible(true);
        Register_panel.setVisible(false);
        ClearData();
    }//GEN-LAST:event_Back_buttonActionPerformed

    private void Register_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Register_buttonActionPerformed
        // TODO add your handling code here:
        pass = Password_text.getPassword();
        password = new String(pass);

        String age = Age_text.getText();
        String user_id = User_id_text.getText();
        String surname = Surname_text.getText();
        String given_name = GivenName_text.getText();
        String sex = Sex_combobox.getSelectedItem().toString();
        String address = Address_text.getText();

        if (!age.isEmpty() && !given_name.isEmpty() && !surname.isEmpty() && !user_id.isEmpty() && !password.isEmpty() && !sex.isEmpty() && !address.isEmpty()) {
            if (Invalid_age_label.getText().isEmpty() == false || Invalid_name_label.getText().isEmpty() == false || Invalid_password_label.isVisible() == true || Password_text.getBorder().getBorderInsets(this).top > 1) {
                JOptionPane.showMessageDialog(null, "There is an error in filling in the information!", "WARNING!", JOptionPane.WARNING_MESSAGE);
            } else {
                Account new_account = new Account(user_id, password, surname, given_name, address, "P", Integer.parseInt(age), sex, "", "Not Active");
                NewAccountFactory newAccountFactory = new NewAccountFactory();

                NewAccount newAccount = newAccountFactory.getRole("P");
                try {
                    boolean success = newAccount.register(new_account, new AccountRequest(user_id, new Date()));
                    if (success) {
                        JOptionPane.showMessageDialog(null, "The application has been completed, please wait for approval.", "REMINDER", JOptionPane.INFORMATION_MESSAGE);
                        Login_panel.setVisible(true);
                        Register_panel.setVisible(false);
                        ClearData();
                    } else {
                        JOptionPane.showMessageDialog(null, "Account has been registered!", "WARNING!", JOptionPane.WARNING_MESSAGE);
                    }
                } catch (IOException | NoSuchAlgorithmException ex) {
                    Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "Please fill in all input boxes!", "WARNING!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_Register_buttonActionPerformed

    public JPasswordField getjPasswordField1() {
        return Login_password_text;
    }

    public void setjPasswordField1(JPasswordField jPasswordField1) {
        this.Login_password_text = jPasswordField1;
    }

    public JTextField getjTextField1() {
        return Login_userid_text;
    }

    public void setjTextField1(JTextField jTextField1) {
        this.Login_userid_text = jTextField1;
    }

    private void Age_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Age_textKeyReleased
        // TODO add your handling code here:
        int age = 0;
        if (!Age_text.getText().isEmpty()) {
            try {
                if (Integer.parseInt(Age_text.getText()) < 0) {
                    Invalid_age_label.setText("Invalid age");
                } else {
                    age = Integer.parseInt(Age_text.getText());
                    Invalid_age_label.setText("");
                }
            } catch (NumberFormatException e) {
                Invalid_age_label.setText("Invalid age");
            }
        }
    }//GEN-LAST:event_Age_textKeyReleased

    private void Cancel_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cancel_buttonActionPerformed
        // TODO add your handling code here:
        Login_panel.setVisible(true);
        Register_panel.setVisible(false);
        ClearData();
    }//GEN-LAST:event_Cancel_buttonActionPerformed

    private void GivenName_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GivenName_textKeyReleased
        // TODO add your handling code here:
        if (GivenName_text.getText().matches(".*\\d+.*") || Surname_text.getText().matches(".*\\d+.*")) {
            Invalid_name_label.setText("Do not enter a number");
        } else {
            Invalid_name_label.setText("");
        }
    }//GEN-LAST:event_GivenName_textKeyReleased

    private void Surname_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Surname_textKeyReleased
        // TODO add your handling code here:
        if (Surname_text.getText().matches(".*\\d+.*") || GivenName_text.getText().matches(".*\\d+.*")) {
            Invalid_name_label.setText("Do not enter a number");
        } else {
            Invalid_name_label.setText("");
        }
    }//GEN-LAST:event_Surname_textKeyReleased

    private void Password_retype_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Password_retype_textKeyReleased
        // TODO add your handling code here:
        pass = Password_text.getPassword();
        password = new String(pass);
        retype_pass = Password_retype_text.getPassword();
        retype_password = new String(retype_pass);

        if (!password.equals(retype_password) && !retype_password.isEmpty()) {
            this.Password_retype_text.setBorder(new LineBorder(Color.red, 2));
            this.Invalid_password_label.setVisible(true);
        } else {
            this.Password_retype_text.setBorder(new LineBorder(Color.black, 1));
            this.Invalid_password_label.setVisible(false);
        }
    }//GEN-LAST:event_Password_retype_textKeyReleased

    private void Password_textKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Password_textKeyReleased
        // TODO add your handling code here:
        pass = Password_text.getPassword();
        password = new String(pass);
        retype_pass = Password_retype_text.getPassword();
        retype_password = new String(retype_pass);

        if ((!checkString(password) || password.length() < 6) && !password.isEmpty()) {
            this.Reminder_label.setForeground(Color.red);
            this.Password_text.setBorder(new LineBorder(Color.red, 2));
        } else {
            this.Reminder_label.setForeground(Color.black);
            this.Password_text.setBorder(new LineBorder(Color.black, 1));
            if (!password.equals(retype_password) && !retype_password.isEmpty()) {
                this.Password_retype_text.setBorder(new LineBorder(Color.red, 2));
            } else {
                this.Password_retype_text.setBorder(new LineBorder(Color.black, 1));
            }
        }
    }//GEN-LAST:event_Password_textKeyReleased

    public void ClearData() {
        Age_text.setText("");
        Invalid_age_label.setText("");
        GivenName_text.setText("");
        Surname_text.setText("");
        User_id_text.setText("");
        Password_text.setText("");
        Password_retype_text.setText("");
        Address_text.setText("");
        Sex_combobox.setSelectedIndex(0);
    }

    private static boolean checkString(String str) {
        char ch;
        boolean capitalFlag = false;
        boolean lowerCaseFlag = false;
        boolean numberFlag = false;
        for (int i = 0; i < str.length(); i++) {
            ch = str.charAt(i);
            if (Character.isDigit(ch)) {
                numberFlag = true;
            } else if (Character.isUpperCase(ch)) {
                capitalFlag = true;
            } else if (Character.isLowerCase(ch)) {
                lowerCaseFlag = true;
            }
            if (numberFlag && capitalFlag && lowerCaseFlag) {
                return true;
            }
        }
        return false;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new LoginScreen().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(LoginScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea Address_text;
    public javax.swing.JTextField Age_text;
    private javax.swing.JButton Back_button;
    private javax.swing.JButton Cancel_button;
    public javax.swing.JTextField GivenName_text;
    private javax.swing.JLabel Invalid_age_label;
    private javax.swing.JLabel Invalid_name_label;
    private javax.swing.JLabel Invalid_password_label;
    private javax.swing.JButton Login_button;
    public javax.swing.JPanel Login_panel;
    private javax.swing.JPasswordField Login_password_text;
    private javax.swing.JTextField Login_userid_text;
    public javax.swing.JPasswordField Password_retype_text;
    public javax.swing.JPasswordField Password_text;
    private javax.swing.JLabel Password_wrong_label;
    private javax.swing.JButton Register_button;
    public javax.swing.JPanel Register_panel;
    private javax.swing.JLabel Reminder_label;
    public javax.swing.JComboBox<String> Sex_combobox;
    private javax.swing.JButton SignUp_button;
    public javax.swing.JTextField Surname_text;
    private javax.swing.JLabel UserId_wrong_label;
    public javax.swing.JTextField User_id_text;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
